Step 2 : Download and install git https://git-scm.com/download/mac
 Step 3 : Signup and create a account on GitHub https://github.com/ 
Step 4 : Add your github email and username to git git config --global user.email "yourGitHub@email.com" 
git config --global user.name "yourGitHubusername" 
Step 5 : Add file/folders to git - tracking 
Step 6 : Commands - terminal 
 goto the location of the folder/project - git init - git status - git add - git commit -m “…..” 
 git remote add origin “location of remote repo” 
git push -u origin master - git log 
 git –help


For autocomplete
 —————————— 
Step 1 : goto terminal put git-completion.bash script in your home directory 
curl https://raw.githubusercontent.com/git... -o ~/.git-completion.bash 
curl  https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash  -o ~/.git-completion.bash
Step 2 : Add following line to your .bash_profile. This tells bash to run git autocomplete script if it exists vi ~/.bash_profile
 if [ -f ~/.git-completion.bash ]; then . ~/.git-completion.bash fi 

For enabling git colors 
———————————— 
Step 1 : check if colouring is already enabled terminal - git config color.ui 
Step 2 : enable colouring git config --global color.ui true

Git branch
------------
1.	What are branches 2. How to create branch 3. How to checkout branch 4. How to merge branch to master 5. How to delete branch (local and remote) _________________________________________ Step 1 : Create branch git branch “branch name” 
2.	Step 2 : Checkout branch git checkout “branch name” 
3.	Step 3 : Merge new branch in master branch git merge “branch name” 
4.	Step 4 : Delete branch git branch -d “branch name” — delete from local git push origin —delete “branch name” — delete from remote


Step 1 : Create branch 
   git branch “branch name”

Step 2 : Checkout branch
   git checkout “branch name”

Step 3 : Merge new branch in master branch
   git merge “branch name”

Step 4 : Delete branch
   git branch -d “branch name”    — delete from local
   git push origin —delete “branch name”   — delete from remote
-------------------------------------------------
Step 1 : Create branch git branch “branch name”
 Step 2 : Checkout branch git checkout “branch name”
 Step 3 : Merge new branch in master branch git merge “branch name” 
Step 4 : Delete branch git branch -d “branch name”	 — delete from local 
Step 5 :  git push origin --delete “branch name”		 	— delete from remote


Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha
$ git init
Initialized empty Git repository in D:/BIYAS-TUTORIALS/TAU-Mocha/.git/

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git status
Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git add .

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git status

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git commit -m "Files are added for TAU_Mocha project"


Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git status
On branch master
nothing to commit, working tree clean

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git remote add origin https://github.com/Ban-biaysme/TAU_Mocha_Demo.git

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git push -u origin master

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git branch TAY_MochaV.1

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git checkout TAY_MochaV.1
Switched to branch 'TAY_MochaV.1'

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (TAY_MochaV.1)
$ git status
On branch TAY_MochaV.1
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test/Instruction.txt

nothing added to commit but untracked files present (use "git add" to track)

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (TAY_MochaV.1)
$ git add .

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (TAY_MochaV.1)
$ git commit -m "Instruction file added"
[TAY_MochaV.1 5101b0b] Instruction file added
 1 file changed, 216 insertions(+)
 create mode 100644 test/Instruction.txt

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (TAY_MochaV.1)
$ git status
On branch TAY_MochaV.1
nothing to commit, working tree clean

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (TAY_MochaV.1)
$ git push -u origin TAY_MochaV.1
Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (TAY_MochaV.1)
$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git merge TAY_MochaV.1
Updating a9be7c0..5101b0b
Fast-forward
 test/Instruction.txt | 216 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 216 insertions(+)
 create mode 100644 test/Instruction.txt

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git push -u origin master
Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git branch -d TAY_MochaV.1
Deleted branch TAY_MochaV.1 (was 5101b0b).

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git push origin --delete TAY_MochaV.1
To https://github.com/Ban-biaysme/TAU_Mocha_Demo.git
 - [deleted]         TAY_MochaV.1

How to trigger notification email from github whenever there is any change/commit in the project 
Step 1 : Github - Repository - Settings - integration & services - add email 
Step 2 : Test and validate by making some change in the project

1.	What are tags / releases 2. Why should i create TAGs 3. When to create TAGs 4. How to create TAGs in git create | show | publish | delete Step 1: Checkout the branch where you want to create the tag git checkout "branch name" example : git checkout master ________________________________________________________ 
2.	Step 2: Create tag with some name git tag "tag name" example : git tag v1.0 git tag -a v1.0 -m "ver 1 of .." (to create annotated tags) ________________________________________________________
3.	 Step 3: Display or Show tags git tag git show v1.0 git tag -l “v1.*” ________________________________________________________
4.	 Step 4: Push tags to remote git push origin v1.0 git push origin --tags git push --tags (to push all tags at once) ________________________________________________________ 
5.	Step 5: Delete tags (if required only) to delete tags from local : git tag -d v1.0 git tag --delete v1.0 to delete tags from remote : git push origin -d v1.0 git push origin --delete v1.0 git push origin :v1.0 to delete multiple tags at once: git tag -d v1.0 v1.1 (local) git push origin -d v1.0 v1.1 (remote) ________________________________________________________
6.	 Checking out TAGS We cannot checkout tags in git We can create a branch from a tag and checkout the branch git checkout -b "branch name" "tag name" example : git checkout -b ReleaseVer1 v1.0 ________________________________________________________
7.	Creating TAGS from past commits git tag "tag name" "reference of commit" example : git tag v1.2 5fcdb03

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git checkout master
Already on 'master'
Your branch is up to date with 'origin/master'.

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git tag v1.0

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git tag
v1.0

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git tag -a v1.1 -m "Tag for release version 1.1"

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git tag
v1.0
v1.1
Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git tag -l "v1.*"

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git push origin v1.0

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git tag -d v1.1
Deleted tag 'v1.1' (was a2e5526)

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git tag

Biyas-Anirban@LAPTOP-8THLD532 MINGW64 /d/BIYAS-TUTORIALS/TAU-Mocha (master)
$ git push origin -d v1.0

git merge - Is a non-destructive operation - Existing branches are not changed in any way - Creates a new merge commit in the feature branch 
git rebase - Moves the entire feature branch to begin on the tip of the master branch - Re-writes the project history - We get much cleaner and linear project history



